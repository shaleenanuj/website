# flake8: noqa
#### MATPLOTLIBRC FORMAT

# This a matplotlib configuration file - you can find a generic copy
# of it on your system in
# site-packages/matplotlib/mpl-data/matplotlibrc.  If you edit it
# there, please note that it will be overwritten in your next install.
# If you want to keep a permanent local copy that will not be
# overwritten, place it in the following location:
# unix/linux:
#     $HOME/.config/matplotlib/matplotlibrc or
#     $XDG_CONFIG_HOME/matplotlib/matplotlibrc (if $XDG_CONFIG_HOME is set)
# other platforms:
#     $HOME/.matplotlib/matplotlibrc
#
# Documentation: https://matplotlib.org/users/customizing.html
#
# This file is best viewed in a editor which supports python mode
# syntax highlighting. Blank lines, or lines starting with a comment
# symbol, are ignored, as are trailing comments.  Other lines must
# have the format
#    key : val # optional comment
#
# Colors: for the color values below, you can either use - a
# matplotlib color string, such as r, k, or b - an rgb tuple, such as
# (1.0, 0.5, 0.0) - a hex string, such as ff00ff - a scalar
# grayscale intensity such as 0.75 - a legal html color name, e.g., red,
# blue, darkslategray

# IN-LINE: You can also dynamically change the default rc settings in a
# python script or interactively from the python shell. All of the rc
# settings are stored in a dictionary-like variable called
# `matplotlib.rcParams`, which is global to the matplotlib package.
# rcParams can be modified directly, for example:
# mpl.rcParams['lines.linewidth'] = 2
# mpl.rcParams['lines.color'] = 'r'
# To display current:
# print(mpl.rcParams)
# or, use the convenience function below to modify (equiv. to above):
# mpl.rc('lines', linewidth=2, color='r')
# More: https://matplotlib.org/users/customizing.html
# Helper func:
# def get_option(group):
#     import matplotlib as mpl
#     for k, v in mpl.rcParams.items():
#         if k.startswith(group):
#             print(k, ':', v)

# NOTE: this file skips (keeps default for) a number of groups,
# including: animation, hatches, image, keymap, legend.


#### CONFIGURATION BEGINS HERE


backend : Qt5Agg
interactive  : True


### LINES
# https://matplotlib.org/api/lines_api.html#module-matplotlib.lines
# lines.antialiased : True
# lines.color : C0  # # has no affect on plot(); see axes.prop_cycle
# lines.dash_capstyle : butt
# lines.dash_joinstyle : round
# lines.dashdot_pattern : [6.4, 1.6, 1.0, 1.6]
# lines.dashed_pattern : [3.7, 1.6]
# lines.dotted_pattern : [1.0, 1.65]
lines.linestyle : -  # Choose from: '-', '--', '-.', ':'
lines.linewidth : 2.0
lines.marker : o
lines.markeredgewidth : 1.0
lines.markersize : 4.0
# lines.scale_dashes : True
# lines.solid_capstyle : projecting
# lines.solid_joinstyle : round


### PATCHES
# Patches are graphical objects that fill 2D space, like polygons or
# circles.  See
# http://matplotlib.org/api/patches_api.html
# patch.antialiased : True
patch.edgecolor : eeeeee
patch.facecolor : blue
# patch.force_edgecolor : False
# patch.linewidth : 1.0


### FONT
# 'font.cursive': ['Apple Chancery',
#                  'Textile',
#                  'Zapf Chancery',
#                  'Sand',
#                  'Script MT',
#                  'Felipa',
#                  'cursive']
# 'font.family': ['sans-serif']
# 'font.fantasy': ['Comic Sans MS',
#                  'Chicago',
#                  'Charcoal',
#                  'ImpactWestern',
#                  'Humor Sans',
#                  'xkcd',
#                  'fantasy']
# 'font.monospace': ['DejaVu Sans Mono',
#                    'Bitstream Vera Sans Mono',
#                    'Computer Modern Typewriter',
#                    'Andale Mono',
#                    'Nimbus Mono L',
#                    'Courier New',
#                    'Courier',
#                    'Fixed',
#                    'Terminal',
#                    'monospace']
# 'font.sans-serif': ['DejaVu Sans',
#                     'Bitstream Vera Sans',
#                     'Computer Modern Sans Serif',
#                     'Lucida Grande',
#                     'Verdana',
#                     'Geneva',
#                     'Lucid',
#                     'Arial',
#                     'Helvetica',
#                     'Avant Garde',
#                     'sans-serif']
# 'font.serif': ['DejaVu Serif',
#                'Bitstream Vera Serif',
#                'Computer Modern Roman',
#                'New Century Schoolbook',
#                'Century Schoolbook L',
#                'Utopia',
#                'ITC Bookman',
#                'Bookman',
#                'Nimbus Roman No9 L',
#                'Times New Roman',
#                'Times',
#                'Palatino',
#                'Charter',
#                'serif']
# 'font.size': 10.0
# 'font.stretch': normal
# 'font.style': normal
# 'font.variant': normal
# 'font.weight': normal


### TEXT
# text properties used by text.Text.  See
# http://matplotlib.org/api/artist_api.html#module-matplotlib.text for more
# text.antialiased : True
# text.color : k
# text.hinting : auto
# text.hinting_factor : 8
# text.latex.preamble : []
# text.latex.preview : False
# text.latex.unicode : False
# text.usetex : False


### MATHTEXT
# The following settings allow you to select the fonts in math mode.
# They map from a TeX font name to a fontconfig font pattern.
# These settings are only used if mathtext.fontset is 'custom'.
# Note that this "custom" mode is unsupported and may go away in the
# future.
# mathtext.bf : sans:bold
# mathtext.cal : cursive
# mathtext.default : it
# mathtext.fallback_to_cm : True
# mathtext.fontset : dejavusans
# mathtext.it : sans:italic
# mathtext.rm : sans
# mathtext.sf : sans
# mathtext.tt : monospace


### AXES
# default face and edge color, default tick sizes,
# default fontsizes for ticklabels, and so on.  See
# http://matplotlib.org/api/axes_api.html#module-matplotlib.axes
# axes.autolimit_mode : data
# axes.axisbelow : line
axes.edgecolor : bcbcbc
axes.facecolor : eeeeee
# axes.formatter.limits : [-7, 7]
# axes.formatter.min_exponent : 0
# axes.formatter.offset_threshold : 4
# axes.formatter.use_locale : False
# axes.formatter.use_mathtext : False
# axes.formatter.useoffset : True
axes.grid : True
# axes.grid.axis : both
# axes.grid.which : major
# axes.hold : None
# axes.labelcolor : k
# axes.labelpad : 4.0
axes.labelsize : large
# axes.labelweight : normal
# axes.linewidth : 0.8
# `prop_cycle` is color cycle for plot lines as *list of string colorspecs*
#     Can be: single letter, long name, web-style hex
#     For 954 most common RGB colors with corresponding hex, see:
#     https://xkcd.com/color/rgb/
# axes.prop_cycle : cycler('color', ['#1f77b4', '#ff7f0e',
#                                    '#2ca02c', '#d62728',
#                                    '#9467bd', '#8c564b',
#                                    '#e377c2', '#7f7f7f',
#                                    '#bcbd22', '#17becf'])
# NOTE - syntax doesn't like line continuations
axes.prop_cycle : cycler('color', ['xkcd:' + color for color in ['cadet blue', 'scarlet', 'bluegreen', 'military green', 'british racing green', 'midnight', 'rose red', 'cyan', 'gold', 'bluish purple']]) + cycler('linestyle', ['-', '--', '-.', ':', '-', '--', '-.', ':', '-', '--'])
# axes.spines.bottom : True
# axes.spines.left : True
# axes.spines.right : True
# axes.spines.top : True
axes.titlepad : 10.0
axes.titlesize : x-large
# axes.titleweight : normal
# axes.unicode_minus : True
# axes.xmargin : 0.05
# axes.ymargin : 0.05
# axes3d.grid : True


### DATES
# These control the default format strings used in AutoDateFormatter.
# Any valid format datetime format string can be used (see the python
# `datetime` for details).  For example using '%%x' will use the locale date representation
# '%%X' will use the locale time representation and '%%c' will use the full locale datetime representation.
# These values map to the scales:
#    {'year': 365, 'month': 30, 'day': 1, 'hour': 1/24, 'minute': 1 / (24 * 60)}
# date.autoformatter.day : %Y-%m-%d
# date.autoformatter.hour : %m-%d %H
# date.autoformatter.microsecond : %M:%S.%f
# date.autoformatter.minute : %d %H:%M
# date.autoformatter.month : %Y-%m
# date.autoformatter.second : %H:%M:%S
# date.autoformatter.year : %Y


### TICKS
# see http://matplotlib.org/api/axis_api.html#matplotlib.axis.Tick
# xtick.alignment : center
# xtick.bottom : True
# xtick.color : k
# xtick.direction : out
# xtick.labelsize : medium
# xtick.major.bottom : True
# xtick.major.pad : 3.5
# xtick.major.size : 3.5
# xtick.major.top : True
# xtick.major.width : 0.8
# xtick.minor.bottom : True
# xtick.minor.pad : 3.4
# xtick.minor.size : 2.0
# xtick.minor.top : True
# xtick.minor.visible : False
# xtick.minor.width : 0.6
# xtick.top : False
#
# ytick.alignment : center_baseline
# ytick.color : k
# ytick.direction : out
# ytick.labelsize : medium
# ytick.left : True
# ytick.major.left : True
# ytick.major.pad : 3.5
# ytick.major.right : True
# ytick.major.size : 3.5
# ytick.major.width : 0.8
# ytick.minor.left : True
# ytick.minor.pad : 3.4
# ytick.minor.right : True
# ytick.minor.size : 2.0
# ytick.minor.visible : False
# ytick.minor.width : 0.6
# ytick.right : False


### GRIDS
grid.alpha : 0.5
# grid.color : #b0b0b0
grid.linestyle : dashed
grid.linewidth : 1.0


### LEGEND
# legend.borderaxespad : 0.5
# legend.borderpad : 0.4
# legend.columnspacing : 2.0
# legend.edgecolor : 0.8
# legend.facecolor : inherit
# legend.fancybox : True
# legend.fontsize : medium
# legend.framealpha : 0.8
# legend.frameon : True
# legend.handleheight : 0.7
# legend.handlelength : 2.0
# legend.handletextpad : 0.8
# legend.labelspacing : 0.5
# legend.loc : best
# legend.markerscale : 1.0
# legend.numpoints : 1
# legend.scatterpoints : 1
# legend.shadow : False


### FIGURE
# See http://matplotlib.org/api/figure_api.html#matplotlib.figure.Figure
# figure.autolayout : False
# NOTE - `dpi` (dots per inch) will change figsize!
# figure.dpi : 72.0
# figure.edgecolor : (1, 1, 1, 0)
# figure.facecolor : (1, 1, 1, 0)
figure.figsize : 8.0, 5.0
# figure.frameon : True
figure.max_open_warning : 10
# figure.subplot.bottom : 0.125
# figure.subplot.hspace : 0.2
# figure.subplot.left : 0.125
# figure.subplot.right : 0.9
# figure.subplot.top : 0.88
# figure.subplot.wspace : 0.2
# figure.titlesize : large
# figure.titleweight : normal
